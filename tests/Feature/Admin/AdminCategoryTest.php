<?php

namespace Tests\Feature\Admin;

use App\Models\category;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Inertia\Testing\AssertableInertia as Assert;
use Tests\TestCase;

class AdminCategoryTest extends TestCase
{
    use RefreshDatabase;
    private User $admin;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->admin = User::factory()->create(['isAdmin' => 1]);
    }

    public function test_category_management_page_can_be_rendered()
    {
        $response = $this->actingAs($this->admin)->get('/admin/categories');
        $response->assertStatus(200);
    }

    public function test_category_is_redirected_to_admin_login_page_if_not_logged_in()
    {
        $response = $this->get('/admin/categories');
        $response->assertRedirect('/admin/login');
    }

    public function test_categories_are_displayed_on_category_management_page()
    {
        $brands = category::factory(2)->create();

        $response = $this->actingAs($this->admin)->get('/admin/categories');

        $response->assertInertia(fn(Assert $assert) => $assert
            ->component('Admin/Categories')
            ->has('categories.data', Category::count()));
    }

    public function test_category_can_be_created()
    {
        $category = Category::factory()->make()->toArray();

        $response = $this->actingAs($this->admin)->post('/admin/categories/store', $category);

        $response->assertRedirect('/admin/categories');
        $this->assertDatabaseHas('categories', ['name' => $category['name']]);
    }

    public function test_category_can_be_edited()
    {
        $category = Category::factory()->create();

        $response = $this->actingAs($this->admin)->put("/admin/categories/update/{$category->id}", [
            'name' => 'New category Name'
        ]);

        $response->assertRedirect('/admin/categories');
        $this->assertDatabaseHas('categories', ['name' => 'New category Name']);
    }

    public function test_category_can_be_deleted()
    {
        $category = Category::factory()->create();

        $response = $this->actingAs($this->admin)->delete("/admin/categories/delete/{$category->id}");

        $response->assertRedirect('/admin/categories');
        $this->assertDatabaseMissing('categories', ['name' => $category->name]);
    }
}
